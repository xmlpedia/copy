* {
  box-sizing: border-box;
}

 /* Add a black background color to the top navigation */
.navbar {
  overflow: hidden;
  background-color: white;
  transition: 0.5s;
}

/* Style the links inside the navigation bar */
.navbar a {
  float: left;
  display: block;
  color: black;
  text-align: center;
  padding: 14px 16px;
  text-decoration: none;
  font-size: 17px;
}

/* Hide the link that should open and close the navbar on small screens */
.navbar .icon {
  display: none;
}


/* Dropdown container - needed to position the dropdown content */
.dropdown {
  display:block;
  float: left;
  overflow: hidden;
}

/* Style the dropdown button to fit inside the navbar */
.dropdown .dropbtn {
  font-size: 24px;
  border: none;
  outline: none;
  color: black;
  padding: 10px 18px;
  background-color: inherit;
  font-family: inherit;
  margin: 0;
}

/* Style the dropdown content (hidden by default) */
.dropdown-content {
  display: none;
  position: absolute;
  background-color: #f9f9f9;
  min-width: 160px;
  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
  z-index: 1;
}

/* Style the links inside the dropdown */
.dropdown-content a {
  float: none;
  color: black;
  padding: 12px 16px;
  text-decoration: none;
  display: block;
  text-align: left;
}

/* Change the color of links on hover */
.navbar a:hover, .dropdown:hover .dropbtn {
  background-color: darkorange;
  color: black;
}

/* Add a grey background to dropdown links on hover */
.dropdown-content a:hover  {
  background-color: #ddd;
  color: black;
}


/* Show the dropdown menu when the user moves the mouse over the dropdown button */
.dropdown:hover .dropdown-content {
  display: block;
}


@media screen and (max-width: 900px) {
  .navbar a:not(:first-child), .dropdown .dropbtn  {
    display: none;
  }
  .navbar a.icon {
   float: right;
   display: block;
 }
}

/* The "responsive" class is added to the navbar with JavaScript when the user clicks on the icon. This class makes the navbar look good on small screens (display the links vertically instead of horizontally) */

@media screen and (max-width: 900px) {
  .navbar.responsive {position: relative;}
  .navbar.responsive a.icon {
    position: absolute;
    right: 0;
    top: 0;
  }
  .navbar.responsive a {
    float: none;
    display: block;
    text-align: left;
  }
  .navbar.responsive .dropdown {float: none;}
  .navbar.responsive .dropdown-content {position: relative;}
  .navbar.responsive .dropdown .dropbtn {
    display: block;
    width: 100%;
    text-align: left;
  }
}



/* Style the body */
.logo {
  float: ;
  width: 100%;
  max-width: 120px;
  height: auto;
  padding-bottom: 20px;
}

.content {
  display: flex;
  flex-flow: row wrap;
  text-align: left;
  font-family: Courier, monospace;
  margin: 0;
  padding: 15px;

}

/* We tell all items to be 100% width, via flex-basis */
.content>* {
  padding: 15px;
  flex: 1 100%;
}

.header {
  text-align: center;
}

.header .h1 {
  font-size: 30px;
}

.footer {
  text-align: center;
}

.main {
  text-align: left;
  font-size: 18px;
  line-height: 1.5;


}



.aside-1 {}

.aside-2 {}

/* We rely on source order for mobile-first approach
 * in this case:
 * 1. header
 * 2. article
 * 3. aside 1
 * 4. aside 2
 * 5. footer
 */
/* Medium screens */
@media all and (min-width: 600px) {

  /* We tell both sidebars to share a row */
  .aside {
    flex: 1 0 0;
  }
}


@media screen and (max-width:800px) {
  .main {
    word-break: break-word;
    -ms-hyphens: auto;
    -moz-hyphens: auto;
    -webkit-hyphens: auto;
    hyphens: auto;
  }
}


/* Large screens */
@media all and (min-width: 800px) {

  /* We invert order of first sidebar and main
   * And tell the main element to take twice as much width as the other two sidebars
   */
  .main {
    flex: 3 0px;

  }

  .aside-1 {
    order: 1;
  }

  .main {
    order: 2;
  }

  .aside-2 {
    order: 3;
  }

  .footer {
    order: 4;
  }
}

.resources_list li {
  line-height: 2;
}

.video-container {
  position: relative;
  padding-bottom: 56.25%;
  padding-top: 30px;
  height: 0;
  overflow: hidden;
}

.video-container iframe, .video-container object, .video-container embed {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.center {
  display: block;
  margin-left: auto;
  margin-right: auto;
  width: 150px;
  height: 150px;
}

/* resposive images */
.responsive {
  width: 100%;
  height: auto;
}


.aside-media {
  width: 100%;
  height: auto;
}

.aside-1 {
  text-align: left;
}

/* table of contents */
.toc_title {
  font-weight: 700;
  text-align: center;
}


.toc_list a:link {
  color: #0000CD;
}

.toc_list a:visited {
  color: #0000CD;
}

.toc_list li {
  margin: 10px 0;
}


.fa-moon-o {
  font-size:25px;
}

.toggle {
  position: absolute;
  top: 5%;
  left: 50%;
  transform: translate(-50%, -50%);
  border:;
  width: 25px;
  height: 25px;
  cursor: pointer;
  border-radius: 20px;
  transition: 0.5s;
}

/*.nightmode.active {
  background:;
  border:;
}*/

.toggle:before {
  content:;
  position: absolute;
  top: 2px;
  left: 2px;
  width: 16px;
  height: 16px;
  border-radius: 50%;
}

.content h1 {
  margin: 0 0 20px;
  padding: 0;
  color: #000;
  transition: 0.5s;
}

.content h2 {
  margin-top: 60px;
}

.content p {
  margin: 0;
  padding: 0;
  color: #000;
  transition: 0.5s;
  font-size: 18px;
  margin-bottom: 20px;
}


/* night mode */
body {
  margin: 0;
  padding: 0;
  transition: 0.5s;
}

body.night,
body.night .content .navbar,
body.night .panel,
body.night .toggle {
  background: #142634;
}

body.night .content h1,
body.night .content p,
body.night .content h2,
body.night .content h3,
body.night .content i,
body.night .content ul,
body.night .resources_list li,
body.night .aside h3 {
  color: #BDC7C1;
}

body.night .content #toc_container,
body.night .content .toc_list a,
body.night .content a,
body.night .footer {
  color: #ccad00;
}



body.night .navbar a:hover,
body.night .content .dropdown-content a
 {
  color: black;
}

body.night .dropdown .dropbtn,
body.night .fa-moon-o
{
  color: white;
}

body.night #myBtn .fas {
  color:white;
}

/* scroll to top button */
#myBtn {
  display: none;
  /* Hidden by default */
  position: fixed;
  /* Fixed/sticky position */
  bottom: 20px;
  /* Place the button at the bottom of the page */
  right: 30px;
  /* Place the button 30px from the right */
  z-index: 99;
  /* Make sure it does not overlap */
  border: none;
  /* Remove borders */
  outline: none;
  /* Remove outline */
  opacity:0.6;
  /* Set a background color */
  background-color: darkorange;

  color: white;
  /* Text color */
  cursor: pointer;
  /* Add a mouse pointer on hover */
  padding: 15px;
  /* Some padding */
  border-radius: 10px;
  /* Rounded corners */
  font-size: 16px;
  /* Increase font size */
}

#myBtn:hover {
  background-color: #555;
  /* Add a dark-grey background on hover */
}



/* FAQs
/* Style the buttons that are used to open and close the accordion panel */
.accordion {
  background-color: #eee;
  color: #444;
  cursor: pointer;
  padding: 18px;
  width: 100%;
  text-align: left;
  border: none;
  outline: none;
  transition: 0.4s;
  font-size: 16px;
}

/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */
.active, .accordion:hover {
  background-color: #ccc;
}

/* Style the accordion panel. Note: hidden by default */
.panel {
  padding: 0 18px;
  background-color: white;
  display: none;
  overflow: hidden;
}

/* animated accordian */
.panel {
  padding: 0 18px;
  background-color: white;
  max-height: 0;
  overflow: hidden;
  transition: max-height 0.2s ease-out;
}
